version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  redis:
    image: "redis:alpine"

  migration:
    build: .
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py migrate django_celery_beat --noinput"
    volumes:
      - .:/code
    env_file:
      - .env
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db

  web:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 config.wsgi:application"
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/media
      - log_data:/code/logs
      - ../logs:/logs
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db
      - migration

  celery:
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/code
      - ../logs:/logs
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - migration

  celery-beat:
    build: .
    command: sh -c "sleep 10 && celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/code
      - ../logs:/logs
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - migration

volumes:
  postgres_data:
  static_volume:
  media_volume:
  log_data:
  logs:
